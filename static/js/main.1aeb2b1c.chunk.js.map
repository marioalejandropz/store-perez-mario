{"version":3,"sources":["contexts/AppContext.js","assets/header-pics/header-x2.png","assets/logo/aerolab-logo.svg","assets/icons/coin.svg","assets/icons/moon.svg","assets/icons/sun.svg","assets/icons/success.svg","assets/icons/error.svg","components/Header/Header.jsx","assets/icons/arrow-left.svg","assets/icons/arrow-right.svg","hooks/useFetchGet.js","utils/components/Pagination/Pagination.jsx","components/Filters/Filters.jsx","components/Products/components/PurchaseHistory.jsx","assets/icons/buy-blue.svg","assets/icons/buy-white.svg","components/Products/components/ProductsList.jsx","components/Products/Products.jsx","components/Footer/Footer.jsx","App/App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","requestUser","setRequestUser","purchaseHistoryBtn","setPurchaseHistoryBtn","buyBtn","setBuyBtn","categoryFilter","setCategoryFilter","priceFilter","setPriceFilter","currentPage","setCurrentPage","postPerPage","inProgress","setInProgress","isDarkMode","setIsDarkMode","redeemProduct","setRedeemProduct","points","Provider","value","Header","useContext","pointsBtn","setPointsBtn","requestPoints","setRequestPoints","isLoading","setIsLoading","completedMsg","setCompletedMsg","addPointsError","setAddPointsError","handleSubmit","a","headers","Accept","Authorization","request","fetch","method","body","JSON","stringify","amount","response","ok","Error","json","res","setTimeout","message","infoRequest","useEffect","console","log","className","src","logo","alt","onClick","sun","moon","name","id","coin","uniqueId","type","success","errorIcon","headerPic","useFetchGet","url","requestData","setRequestData","Pagination","paginate","pageNumber","pageNumbers","i","Math","ceil","length","push","map","number","arrowRight","arrowLeft","Filters","availableProducts","indexOfLastPost","onChange","e","target","sort","PurchaseHistory","filteredProducts","filter","prod","category","b","cost","currentDate","Date","timeWindow","setDate","getDate","redeemedProducts","createDate","getTime","products","img","hdUrl","ProductList","missingPoins","isPending","isCompleted","error","buyBlue","buyWhite","_id","Products","setIsPending","setIsCompleted","setError","productId","Footer","App","indexOfFirstPost","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aeb2b1c.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\nexport const AppProvider = ({ children }) => {\r\n   //Hooks\r\n   const [requestUser, setRequestUser] = useState([]);\r\n   const [purchaseHistoryBtn, setPurchaseHistoryBtn] = useState(\"\");\r\n   const [buyBtn, setBuyBtn] = useState(\"\");\r\n   const [categoryFilter, setCategoryFilter] = useState(\"Category\");\r\n   const [priceFilter, setPriceFilter] = useState(\"Price\");\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [postPerPage] = useState(16);\r\n   const [inProgress, setInProgress] = useState(false);\r\n   const [isDarkMode, setIsDarkMode] = useState(false);\r\n   const [redeemProduct, setRedeemProduct] = useState([]);\r\n\r\n   // User points\r\n   const points = requestUser.points - 7447930 || \"\";\r\n\r\n   return (\r\n      <AppContext.Provider\r\n         value={{\r\n            requestUser,\r\n            setRequestUser,\r\n            buyBtn,\r\n            setBuyBtn,\r\n            points,\r\n            purchaseHistoryBtn,\r\n            setPurchaseHistoryBtn,\r\n            categoryFilter,\r\n            setCategoryFilter,\r\n            priceFilter,\r\n            setPriceFilter,\r\n            currentPage,\r\n            setCurrentPage,\r\n            postPerPage,\r\n            inProgress,\r\n            setInProgress,\r\n            isDarkMode,\r\n            setIsDarkMode,\r\n            redeemProduct,\r\n            setRedeemProduct,\r\n         }}\r\n      >\r\n         {children}\r\n      </AppContext.Provider>\r\n   );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/header-x2.cc65119a.png\";","export default __webpack_public_path__ + \"static/media/aerolab-logo.0a8fb170.svg\";","export default __webpack_public_path__ + \"static/media/coin.b8bc711d.svg\";","export default __webpack_public_path__ + \"static/media/moon.eee837ef.svg\";","export default __webpack_public_path__ + \"static/media/sun.2479fc5a.svg\";","export default __webpack_public_path__ + \"static/media/success.08385652.svg\";","export default __webpack_public_path__ + \"static/media/error.d42ef678.svg\";","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { uniqueId } from \"lodash\";\r\nimport \"./Header.css\";\r\nimport headerPic from \"../../assets/header-pics/header-x2.png\";\r\nimport logo from \"../../assets/logo/aerolab-logo.svg\";\r\nimport coin from \"../../assets/icons/coin.svg\";\r\nimport moon from \"../../assets/icons/moon.svg\";\r\nimport sun from \"../../assets/icons/sun.svg\";\r\nimport success from \"../../assets/icons/success.svg\";\r\nimport errorIcon from \"../../assets/icons/error.svg\";\r\n\r\nfunction Header() {\r\n   //Context\r\n   const { points, setRequestUser, requestUser, isDarkMode, setIsDarkMode, redeemProduct } = useContext(AppContext);\r\n\r\n   //Hooks\r\n   const [pointsBtn, setPointsBtn] = useState(false);\r\n   const [requestPoints, setRequestPoints] = useState([]);\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [completedMsg, setCompletedMsg] = useState(false);\r\n   const [addPointsError, setAddPointsError] = useState(null);\r\n\r\n   //Add points Handler\r\n   const handleSubmit = (points) => {\r\n      setIsLoading(true);\r\n      //Post request to add points\r\n      async function infoRequest() {\r\n         //Api authentication\r\n         const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization:\r\n               \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZWRkOWU5OTQ0NGZlNDAwNmRhOTkyNGQiLCJpYXQiOjE1OTE1ODIzNjF9.-f40dyUIGFsBSB_PTeBGdSLI58I21-QBJNi9wkODcKk\",\r\n         };\r\n         const request = async () =>\r\n            await fetch(`https://coding-challenge-api.aerolab.co/user/points`, {\r\n               method: \"POST\",\r\n               headers,\r\n               body: JSON.stringify({ amount: points }),\r\n            });\r\n         try {\r\n            const response = await request();\r\n            if (!response.ok) {\r\n               throw Error(\"Error! Try again later\");\r\n            }\r\n            const res = await response.json();\r\n            setRequestPoints(res);\r\n            setIsLoading(false);\r\n            setCompletedMsg(true);\r\n            setAddPointsError(null);\r\n            setTimeout(() => {\r\n               setCompletedMsg(false);\r\n            }, 5000);\r\n         } catch (error) {\r\n            setAddPointsError(error.message);\r\n            setTimeout(() => {\r\n               setAddPointsError(null);\r\n            }, 7000);\r\n            setIsLoading(false);\r\n            setCompletedMsg(false);\r\n         }\r\n      }\r\n      infoRequest();\r\n   };\r\n\r\n   useEffect(() => {\r\n      //Api request to get the user info\r\n      async function infoRequest() {\r\n         //Api authentication\r\n         const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization:\r\n               \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZWRkOWU5OTQ0NGZlNDAwNmRhOTkyNGQiLCJpYXQiOjE1OTE1ODIzNjF9.-f40dyUIGFsBSB_PTeBGdSLI58I21-QBJNi9wkODcKk\",\r\n         };\r\n         const request = async () => await fetch(`https://coding-challenge-api.aerolab.co/user/me`, { headers });\r\n         try {\r\n            const response = await request();\r\n            const res = await response.json();\r\n            setRequestUser(res);\r\n         } catch (error) {\r\n            console.log(error);\r\n         }\r\n      }\r\n      infoRequest();\r\n   }, [setRequestUser, requestPoints, redeemProduct]);\r\n\r\n   //Alternate between light and dark mode logo\r\n   const showLogo = () => (!isDarkMode ? moon : sun);\r\n\r\n   return (\r\n      <header>\r\n         <div className=\"logo-username-container\">\r\n            <div className=\"logo-darkmode-container\">\r\n               <img className=\"logo\" src={logo} alt=\"Page logo, an orange kite\" />\r\n               {/* Alternate between light and dark mode */}\r\n               <button className=\"darkmode-container\" onClick={() => setIsDarkMode(!isDarkMode)}>\r\n                  <img\r\n                     className=\"darkmode-btn\"\r\n                     src={showLogo()}\r\n                     alt=\"Darkmode logo, a black moon when the page is light and a white sun when the page is dark\"\r\n                  />\r\n               </button>\r\n            </div>\r\n            <div className=\"username-points-container\">\r\n               <div className=\"username\" key={requestUser.id}>\r\n                  {requestUser.name}\r\n               </div>\r\n               <button key={uniqueId()} className=\"total-points-btn\" onClick={() => setPointsBtn(!pointsBtn)}>\r\n                  {points}\r\n                  <img className=\"coin-icon\" src={coin} alt=\"Yellow and circular coin\" />\r\n               </button>\r\n            </div>\r\n         </div>\r\n         <div className=\"add-points-header-container\">\r\n            <div className={`${pointsBtn ? \"add-points-container\" : \"hide-container\"}`}>\r\n               <button className=\"points-btn\" type=\"button\" onClick={() => handleSubmit(1000)}>\r\n                  Add 1000\r\n                  <img className=\"coin-icon\" src={coin} alt=\"Yellow and circular coin\" />\r\n               </button>\r\n               <button className=\"points-btn\" type=\"button\" onClick={() => handleSubmit(5000)}>\r\n                  Add 5000\r\n                  <img className=\"coin-icon\" src={coin} alt=\"Yellow and circular coin\" />\r\n               </button>\r\n               <button className=\"points-btn\" type=\"button\" onClick={() => handleSubmit(7500)}>\r\n                  Add 7500\r\n                  <img className=\"coin-icon\" src={coin} alt=\"Yellow and circular coin\" />\r\n               </button>\r\n               {/* Conditionals to handle point requests and errors */}\r\n               {isLoading && (\r\n                  <div className=\"points-message-container\">\r\n                     <p className=\"points-message\">Processing request...</p>{\" \"}\r\n                  </div>\r\n               )}\r\n               {completedMsg && (\r\n                  <div className=\"points-message-container\">\r\n                     <p className=\"points-message\">Success!</p>\r\n                     <img className=\"success-icon\" src={success} alt=\"Green check symbol\" />\r\n                  </div>\r\n               )}\r\n               {addPointsError && (\r\n                  <div className=\"points-message-container\">\r\n                     <div>\r\n                        <p className=\"points-message-error\">{addPointsError}</p>\r\n                     </div>\r\n                     <div>\r\n                        <img className=\"error-icon\" src={errorIcon} alt=\"Red circle with an exclamation mark inside\" />\r\n                     </div>\r\n                  </div>\r\n               )}\r\n            </div>\r\n            <div className=\"h1-pic-container\">\r\n               <h1 className=\"title\">Electronics</h1>\r\n               <img className=\"header-pic\" src={headerPic} alt=\"Blue headphones inside a blue banner background\" />\r\n            </div>\r\n         </div>\r\n      </header>\r\n   );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/arrow-left.e6eb9be1.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.3306c112.svg\";","import { useEffect, useState, useContext } from \"react\";\r\nimport { AppContext } from \"../contexts/AppContext\";\r\n\r\nfunction useFetchGet(url, redeemProduct) {\r\n   //Context\r\n   const { setInProgress } = useContext(AppContext);\r\n\r\n   // Hook\r\n   const [requestData, setRequestData] = useState([]);\r\n\r\n   useEffect(() => {\r\n      // Api request to get available products or products history\r\n      setInProgress(true);\r\n      async function infoRequest() {\r\n         // Api authentication\r\n         const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization:\r\n               \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZWRkOWU5OTQ0NGZlNDAwNmRhOTkyNGQiLCJpYXQiOjE1OTE1ODIzNjF9.-f40dyUIGFsBSB_PTeBGdSLI58I21-QBJNi9wkODcKk\",\r\n         };\r\n         const request = async () => await fetch(url, { headers });\r\n         try {\r\n            const response = await request();\r\n            const res = await response.json();\r\n            setInProgress(false);\r\n            setRequestData(res);\r\n         } catch (error) {\r\n            setInProgress(false);\r\n            console.log(error);\r\n         }\r\n      }\r\n      infoRequest();\r\n   }, [setRequestData, url, redeemProduct, setInProgress]);\r\n   return requestData;\r\n}\r\n\r\nexport default useFetchGet;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Pagination.css\";\r\nimport { AppContext } from \"../../../contexts/AppContext\";\r\nimport arrowLeft from \"../../../assets/icons/arrow-left.svg\";\r\nimport arrowRight from \"../../../assets/icons/arrow-right.svg\";\r\nimport { uniqueId } from \"lodash\";\r\nimport useFetchGet from \"../../../hooks/useFetchGet\";\r\n\r\nconst Pagination = () => {\r\n   //Context\r\n   const { setBuyBtn, setCurrentPage, postPerPage } = useContext(AppContext);\r\n\r\n   //Custom Hook\r\n   const requestData = useFetchGet(`https://coding-challenge-api.aerolab.co/products`);\r\n\r\n   //Function to change page\r\n   const paginate = (pageNumber) => {\r\n      setCurrentPage(pageNumber);\r\n      setBuyBtn(\"\");\r\n   };\r\n\r\n   const pageNumbers = [];\r\n\r\n   //Divide the total products requested for the posts per page defined\r\n   for (let i = 1; i <= Math.ceil(requestData.length / postPerPage); i++) {\r\n      pageNumbers.push(i);\r\n   }\r\n\r\n   return (\r\n      <>\r\n         {pageNumbers.map((number) => (\r\n            <div key={uniqueId()} className=\"arrows-container\">\r\n               {number === 2 ? (\r\n                  <img\r\n                     key={number}\r\n                     onClick={() => paginate(number)}\r\n                     src={arrowRight}\r\n                     className=\"arrow-right arrow\"\r\n                     alt=\"Arrow inside a circle pointing right\"\r\n                  />\r\n               ) : (\r\n                  <img\r\n                     key={number}\r\n                     onClick={() => paginate(number)}\r\n                     src={arrowLeft}\r\n                     className=\"arrow-left arrow\"\r\n                     alt=\"Arrow inside a circle pointing left\"\r\n                  />\r\n               )}\r\n            </div>\r\n         ))}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport \"./Filters.css\";\r\nimport Pagination from \"../../utils/components/Pagination/Pagination\";\r\nimport useFetchGet from \"../../hooks/useFetchGet\";\r\n\r\nfunction Filters({ availableProducts, indexOfLastPost }) {\r\n   //Context\r\n   const { setPurchaseHistoryBtn, purchaseHistoryBtn, categoryFilter, setCategoryFilter, setPriceFilter } = useContext(AppContext);\r\n\r\n   //Custom Hook to request available products\r\n   const requestData = useFetchGet(`https://coding-challenge-api.aerolab.co/products`);\r\n\r\n   return (\r\n      <div className=\"filters-container\">\r\n         <div className={`${purchaseHistoryBtn ? \"hide-amount\" : \"\"}`}>\r\n            {/* Condition to render products per page */}\r\n            {categoryFilter !== \"Category\" ? (\r\n               <div className=\"amount-products text\">\r\n                  <p>\r\n                     {availableProducts.length} of {availableProducts.length} products\r\n                  </p>\r\n               </div>\r\n            ) : (\r\n               <div className=\"amount-products\">\r\n                  <p className=\"amount-products\">\r\n                     {indexOfLastPost} of {requestData.length} products\r\n                  </p>\r\n               </div>\r\n            )}\r\n         </div>\r\n         <div className=\"vertical-line\"></div>\r\n         <p className=\"sort-by\">Sort by:</p>\r\n         {/* Category filter */}\r\n         <select className=\"filter\" value={categoryFilter} onChange={(e) => setCategoryFilter(e.target.value)}>\r\n            <option value=\"Category\">Category</option>\r\n            <option value=\"Phones\">Phones</option>\r\n            <option value=\"Gaming\">Gaming</option>\r\n            <option value=\"Laptops\">Laptops</option>\r\n            <option value=\"Cameras\">Cameras</option>\r\n            <option value=\"Audio\">Audio</option>\r\n            <option value=\"Monitors & TV\">Monitors & TV</option>\r\n            <option value=\"Smart Home\">Smart Home</option>\r\n            <option value=\"Drones\">Drones</option>\r\n            <option value=\"Phone Accessories\">Phone Accessories</option>\r\n            <option value=\"PC Accessories\">PC Accessories</option>\r\n            <option value=\"Tablets & E-readers\">Tablets & E-readers</option>\r\n         </select>\r\n         {/* Price filter */}\r\n         <select className=\"filter\" onChange={(e) => setPriceFilter({ sort: e.target.value })}>\r\n            <option value=\"Price\">Price</option>\r\n            <option value=\"Lowest price\">Lowest price</option>\r\n            <option value=\"Highest price\">Highest price</option>\r\n         </select>\r\n         <div className=\"vertical-line\"></div>\r\n         {/* Condition to change between available products and purchased products vista */}\r\n         {!purchaseHistoryBtn ? (\r\n            <button className=\"purchase-history-btn filter\" onClick={() => setPurchaseHistoryBtn(!purchaseHistoryBtn)}>\r\n               Purchase History\r\n            </button>\r\n         ) : (\r\n            <button className=\"purchase-history-btn filter\" onClick={() => setPurchaseHistoryBtn(!purchaseHistoryBtn)}>\r\n               Available Products\r\n            </button>\r\n         )}\r\n         {availableProducts.length < 16 || purchaseHistoryBtn ? <></> : <Pagination />}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Filters;\r\n","import React, { useContext } from \"react\";\r\nimport coin from \"../../../assets/icons/coin.svg\";\r\nimport { uniqueId } from \"lodash\";\r\nimport useFetchGet from \"../../../hooks/useFetchGet\";\r\nimport { AppContext } from \"../../../contexts/AppContext\";\r\n\r\nfunction PurchaseHistory() {\r\n   //Context\r\n   const { categoryFilter, priceFilter, redeemProduct } = useContext(AppContext);\r\n\r\n   //Custom Hook to request purchase history\r\n   const requestData = useFetchGet(`https://coding-challenge-api.aerolab.co/user/history`, redeemProduct);\r\n\r\n   //Filter functions for purchased products\r\n   const filterFunction = () => {\r\n      const filterProducts = requestData\r\n         //Filter by category\r\n         .filter((prod) => {\r\n            if (categoryFilter !== \"Category\") {\r\n               return categoryFilter === prod.category;\r\n            } else {\r\n               return prod;\r\n            }\r\n         })\r\n         //Filter by price\r\n         .sort((a, b) => {\r\n            if (priceFilter.sort === \"Highest price\") {\r\n               return b.cost - a.cost;\r\n            } else if (priceFilter.sort === \"Lowest price\") {\r\n               return a.cost - b.cost;\r\n            }\r\n            return priceFilter;\r\n         });\r\n\r\n      return filterProducts;\r\n   };\r\n\r\n   const filteredProducts = filterFunction();\r\n\r\n   const currentDate = new Date();\r\n   const timeWindow = new Date(currentDate.setDate(currentDate.getDate() - 2));\r\n   //Function to render only the products redeemed during the last 2 days,\r\n   //because the info that comes from the API contains thousands of redeemed products.\r\n   const redeemedProducts = filteredProducts.filter((e) => {\r\n      const d = new Date(e.createDate);\r\n      return d.getTime() > timeWindow;\r\n   });\r\n\r\n   return (\r\n      <div className=\"products-main-container\">\r\n         {(redeemedProducts || []).map((products) => {\r\n            return (\r\n               <div key={uniqueId()} className=\"products-container\">\r\n                  <div className=\"pic-icon-container\">\r\n                     <img className=\"product-pic\" key={uniqueId()} src={products.img.hdUrl} alt=\"electronic device\" />\r\n                     <div className=\"missing-coins-container\">\r\n                        <p className=\"coins-p-history\">{products.cost}</p>\r\n                        <img className=\"missing-coins-icon\" src={coin} alt=\"Yellow and circular coin\" />\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"p-container\">\r\n                     <p className=\"product-category\" key={uniqueId()}>\r\n                        {products.category}\r\n                     </p>\r\n                     <p className=\"product-name\" key={uniqueId()}>\r\n                        {products.name}\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default PurchaseHistory;\r\n","export default __webpack_public_path__ + \"static/media/buy-blue.c5c4f01c.svg\";","export default __webpack_public_path__ + \"static/media/buy-white.9b6e6567.svg\";","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../contexts/AppContext\";\r\nimport coin from \"../../../assets/icons/coin.svg\";\r\nimport { uniqueId } from \"lodash\";\r\nimport buyBlue from \"../../../assets/icons/buy-blue.svg\";\r\nimport buyWhite from \"../../../assets/icons/buy-white.svg\";\r\nimport success from \"../../../assets/icons/success.svg\";\r\nimport errorIcon from \"../../../assets/icons/error.svg\";\r\n\r\nfunction ProductList({ missingPoins, i, products, isPending, isCompleted, error, handleSubmit }) {\r\n   //Context\r\n   const { buyBtn, setBuyBtn, points } = useContext(AppContext);\r\n\r\n   return (\r\n      <div key={uniqueId()} className={`${buyBtn === i ? \"products-container-blue\" : \"products-container\"}`}>\r\n         {/* Conditional rendering for redeem now window */}\r\n         {buyBtn !== i ? (\r\n            <div className=\"pic-icon-container\">\r\n               <img className=\"product-pic\" key={uniqueId()} src={products.img.hdUrl} alt=\"electronic device\" />\r\n               {/* Conditional rendering for purchase icon or missing points */}\r\n               {products.cost < points ? (\r\n                  <img className=\"buy-icon\" src={buyBlue} alt=\"white shopping bag inside a circular blue background\" onClick={() => setBuyBtn(i)} />\r\n               ) : (\r\n                  <div className=\"missing-coins-container\">\r\n                     <p className=\"missing-coins-p\">You need {missingPoins}</p>\r\n                     <img className=\"missing-coins-icon\" src={coin} alt=\"Yellow and circular coin\" />\r\n                  </div>\r\n               )}\r\n            </div>\r\n         ) : (\r\n            <div className=\"redeem-main-container\">\r\n               <img className=\"product-pic\" key={uniqueId()} src={products.img.hdUrl} alt=\"electronic device\" />\r\n               <img className=\"buy-icon\" src={buyWhite} alt=\"Blue shopping bag inside a circular white background\" onClick={() => setBuyBtn(\"\")} />\r\n               <div className=\"reedem-container\">\r\n                  <div className=\"coins-amount-container\">\r\n                     <p className=\"coins-p\">{products.cost}</p>\r\n                     <img className=\"coins-icon\" src={coin} alt=\"Yellow and circular coin\" />\r\n                  </div>\r\n                  {/* Conditionals to handle redeem requests and errors */}\r\n                  {!isPending && (\r\n                     <button className=\"redeem-btn\" type=\"button\" onClick={() => handleSubmit(products._id)}>\r\n                        Redeem Now\r\n                     </button>\r\n                  )}\r\n                  {isPending && <button className=\"redeem-btn\">Processing request...</button>}\r\n                  {isCompleted && (\r\n                     <div className=\"redeem-message-container\">\r\n                        <p> Success! </p>\r\n                        <img className=\"message-icon\" src={success} alt=\"Green check symbol\" />\r\n                     </div>\r\n                  )}\r\n                  {error && (\r\n                     <div className=\"redeem-error-container\">\r\n                        <p className=\"error-p\"> {error} </p>\r\n                        <img className=\"message-icon\" src={errorIcon} alt=\"Red circle with an exclamation mark inside\" />\r\n                     </div>\r\n                  )}\r\n               </div>\r\n            </div>\r\n         )}\r\n         <div className=\"p-container\">\r\n            <p className=\"product-category\" key={uniqueId()}>\r\n               {products.category}\r\n            </p>\r\n            <p className=\"product-name\" key={uniqueId()}>\r\n               {products.name}\r\n            </p>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport \"./Products.css\";\r\nimport PurchaseHistory from \"./components/PurchaseHistory\";\r\nimport ProductList from \"./components/ProductsList\";\r\nimport { uniqueId } from \"lodash\";\r\n\r\nfunction Products({ availableProducts }) {\r\n   //Context\r\n   const { points, purchaseHistoryBtn, inProgress, setRedeemProduct } = useContext(AppContext);\r\n\r\n   //Hooks\r\n   const [isPending, setIsPending] = useState(false);\r\n   const [isCompleted, setIsCompleted] = useState(false);\r\n   const [error, setError] = useState(null);\r\n\r\n   //Redeem products Handler\r\n   const handleSubmit = (id) => {\r\n      setIsPending(true);\r\n\r\n      //Post request to redeem products\r\n      async function infoRequest() {\r\n         //Api authentication\r\n         const headers = {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            Authorization:\r\n               \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZWRkOWU5OTQ0NGZlNDAwNmRhOTkyNGQiLCJpYXQiOjE1OTE1ODIzNjF9.-f40dyUIGFsBSB_PTeBGdSLI58I21-QBJNi9wkODcKk\",\r\n         };\r\n         const request = async () =>\r\n            await fetch(`https://coding-challenge-api.aerolab.co/redeem`, {\r\n               method: \"POST\",\r\n               headers,\r\n               body: JSON.stringify({ productId: id }),\r\n            });\r\n         try {\r\n            const response = await request();\r\n            if (!response.ok) {\r\n               throw Error(\"Error! Could not complete the request\");\r\n            }\r\n            const res = await response.json();\r\n            setRedeemProduct(res);\r\n            setIsPending(false);\r\n            setError(null);\r\n            setIsCompleted(true);\r\n            setTimeout(() => {\r\n               setIsCompleted(false);\r\n            }, 5000);\r\n         } catch (error) {\r\n            setIsPending(false);\r\n            setError(error.message);\r\n            setTimeout(() => {\r\n               setError(null);\r\n            }, 7000);\r\n            setIsCompleted(false);\r\n         }\r\n      }\r\n      infoRequest();\r\n   };\r\n\r\n   return (\r\n      <div className=\"purchaseHistory-container\">\r\n         {/* Condition to render the available products or the purchase history vista */}\r\n         {!purchaseHistoryBtn ? (\r\n            <div className=\"products-main-container\">\r\n               {(availableProducts || []).map((products, i) => {\r\n                  //Find missing points\r\n                  const missingPoins = (points - products.cost) * -1;\r\n                  return (\r\n                     <ProductList\r\n                        missingPoins={missingPoins}\r\n                        i={i}\r\n                        products={products}\r\n                        isPending={isPending}\r\n                        isCompleted={isCompleted}\r\n                        error={error}\r\n                        handleSubmit={handleSubmit}\r\n                        key={uniqueId()}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n         ) : (\r\n            <PurchaseHistory />\r\n         )}\r\n         {/* Loading animation */}\r\n         {inProgress && <div className=\"loading\"></div>}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Products;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport \"./Footer.css\";\r\nimport Pagination from \"../../utils/components/Pagination/Pagination\";\r\nimport useFetchGet from \"../../hooks/useFetchGet\";\r\n\r\nfunction Footer({ availableProducts, indexOfLastPost }) {\r\n   //Context\r\n   const { categoryFilter, purchaseHistoryBtn } = useContext(AppContext);\r\n\r\n   //Custom Hook\r\n   const requestData = useFetchGet(`https://coding-challenge-api.aerolab.co/products`);\r\n\r\n   return (\r\n      <footer>\r\n         <div className={`${purchaseHistoryBtn ? \"hide-amount\" : \"amount-container\"}`}>\r\n            <div className=\"amount-products-footer\">\r\n               {/* Condition to show the right amount of items per page even with the filters active */}\r\n               {categoryFilter !== \"Category\" ? (\r\n                  <div className=\"amount-products\">\r\n                     <p>\r\n                        {availableProducts.length} of {availableProducts.length} products\r\n                     </p>\r\n                  </div>\r\n               ) : (\r\n                  <div className=\"amount-products\">\r\n                     <p>\r\n                        {indexOfLastPost} of {requestData.length} products\r\n                     </p>\r\n                  </div>\r\n               )}\r\n            </div>\r\n            {availableProducts.length < 16 ? <></> : <Pagination />}\r\n         </div>\r\n      </footer>\r\n   );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../contexts/AppContext\";\nimport \"./App.css\";\nimport \"./darkMode.css\";\nimport Header from \"../components/Header/Header\";\nimport Filters from \"../components/Filters/Filters\";\nimport Products from \"../components/Products/Products\";\nimport Footer from \"../components/Footer/Footer\";\nimport useFetchGet from \"../hooks/useFetchGet\";\n\nfunction App() {\n   //Context\n   const { categoryFilter, priceFilter, currentPage, postPerPage, isDarkMode } = useContext(AppContext);\n\n   //Custom Hooks\n   const requestData = useFetchGet(`https://coding-challenge-api.aerolab.co/products`);\n\n   //Filter functions for available products\n   const filterFunction = () => {\n      const filterProducts = requestData\n         //Filter by category\n         .filter((prod) => {\n            if (categoryFilter !== \"Category\") {\n               return categoryFilter === prod.category;\n            } else {\n               return prod;\n            }\n         })\n         //Filter by price\n         .sort((a, b) => {\n            if (priceFilter.sort === \"Highest price\") {\n               return b.cost - a.cost;\n            } else if (priceFilter.sort === \"Lowest price\") {\n               return a.cost - b.cost;\n            }\n            return priceFilter;\n         });\n\n      return filterProducts;\n   };\n\n   const filteredProducts = filterFunction();\n\n   //Pagination - Get current products\n   const indexOfLastPost = currentPage * postPerPage;\n   const indexOfFirstPost = indexOfLastPost - postPerPage;\n   const availableProducts = filteredProducts.slice(indexOfFirstPost, indexOfLastPost);\n\n   return (\n      // Darkmode condition\n      <main className={`App ${isDarkMode ? \"darkMode\" : \"App\"}`}>\n         <div className=\"general-container\">\n            <Header />\n            <Filters availableProducts={availableProducts} indexOfLastPost={indexOfLastPost} />\n            <Products availableProducts={availableProducts} />\n            <Footer indexOfLastPost={indexOfLastPost} availableProducts={availableProducts} />\n         </div>\n      </main>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppProvider } from \"./contexts/AppContext\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <AppProvider>\n         <App />\n      </AppProvider>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}